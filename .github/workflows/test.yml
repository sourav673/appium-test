name: Android CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    outputs:
      apk_path: ${{ steps.build-apk.outputs.apk-path }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Set up Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Build APK
        id: build-apk
        run: |
          ./gradlew --no-daemon assembleGplayDebug
          echo "apk-path=build/outputs/apk/gplay/debug/$(ls build/outputs/apk/gplay/debug | grep .apk)" >> $GITHUB_OUTPUT

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: built-apk
          path: build/outputs/apk/gplay/debug/*.apk

  test-browserstack:
    name: Run Appium Tests on BrowserStack
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Download built APK
        uses: actions/download-artifact@v4
        with:
          name: built-apk
          path: ./appium-tests/apk/

      - name: Run Appium Test on BrowserStack
        working-directory: ./appium-tests
        env:
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        run: |
          ./gradlew clean test --info

  test-ec2:
    name: Run Appium Tests on AWS EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Upload APK to EC2
        run: |
          scp -i ~/.ssh/id_rsa build/outputs/apk/gplay/debug/*.apk ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/app.apk

      - name: Trigger Remote Test Script on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            export DISPLAY=:0
            cd appium-tests
            ./gradlew clean test --info
          EOF
